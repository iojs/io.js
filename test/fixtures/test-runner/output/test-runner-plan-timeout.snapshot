TAP version 13
# Subtest: planning with timeout
    # Subtest: planning should pass if plan it's correct
    ok 1 - planning should pass if plan it's correct
      ---
      duration_ms: *
      type: 'test'
      ...
    # Subtest: planning should fail if plan it's incorrect
    not ok 2 - planning should fail if plan it's incorrect
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/test-runner-plan-timeout.js:(LINE):3'
      failureType: 'testCodeFailure'
      error: 'plan expected 1 assertions but received 2'
      code: 'ERR_TEST_FAILURE'
      ...
    # Subtest: planning with timeout
    not ok 3 - planning with timeout
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/test-runner-plan-timeout.js:(LINE):3'
      failureType: 'testTimeoutFailure'
      error: 'plan timed out after 2000ms with 0 assertions when expecting 1'
      code: 'ERR_TEST_FAILURE'
      ...
    # Subtest: nested planning with timeout
        # Subtest: nested
        not ok 1 - nested
          ---
          duration_ms: *
          type: 'test'
          location: '/test/fixtures/test-runner/output/test-runner-plan-timeout.js:(LINE):7'
          failureType: 'cancelledByParent'
          error: 'test did not finish before its parent and was cancelled'
          code: 'ERR_TEST_FAILURE'
          ...
        1..1
    not ok 4 - nested planning with timeout
      ---
      duration_ms: *
      type: 'test'
      location: '/test/fixtures/test-runner/output/test-runner-plan-timeout.js:(LINE):3'
      failureType: 'subtestsFailed'
      error: '1 subtest failed'
      code: 'ERR_TEST_FAILURE'
      ...
    1..4
not ok 1 - planning with timeout
  ---
  duration_ms: *
  type: 'suite'
  location: '/test/fixtures/test-runner/output/test-runner-plan-timeout.js:(LINE):1'
  failureType: 'subtestsFailed'
  error: '3 subtests failed'
  code: 'ERR_TEST_FAILURE'
  ...
1..1
# tests 5
# suites 1
# pass 1
# fail 2
# cancelled 2
# skipped 0
# todo 0
# duration_ms *
